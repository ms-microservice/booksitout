buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'org.jetbrains.kotlin.jvm' version '1.8.0'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.jinkyumpark'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

jar {
    enabled = false
}

repositories {
    mavenCentral()
}

dependencies {
    // Languages
    implementation('org.jetbrains.kotlin:kotlin-stdlib-jdk8')
    implementation('org.projectlombok:lombok:1.18.24')
    annotationProcessor('org.projectlombok:lombok')
    compileOnly('org.projectlombok:lombok')

    // Web
    implementation('org.springframework.boot:spring-boot-starter-web')
    annotationProcessor('org.springframework.boot:spring-boot-configuration-processor')
    implementation('org.springframework.boot:spring-boot-starter-webflux')
    developmentOnly("io.netty:netty-resolver-dns-native-macos:4.1.68.Final:osx-aarch_64")

    // Validation, Serialization
    implementation('org.springframework.boot:spring-boot-starter-validation')
    implementation('com.fasterxml.jackson.datatype:jackson-datatype-jsr310')

    // DB
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('mysql:mysql-connector-java')
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"

    // Security
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('javax.xml.bind:jaxb-api')
    compileOnly('io.jsonwebtoken:jjwt-api:0.11.5')
    runtimeOnly('io.jsonwebtoken:jjwt-impl:0.11.5')
    runtimeOnly('io.jsonwebtoken:jjwt-jackson:0.11.5')
    implementation('org.springframework.boot:spring-boot-starter-oauth2-resource-server')

    // Utils
    implementation('com.google.guava:guava:31.1-jre')
    implementation('com.google.code.gson:gson:2.9.0')
    implementation('org.springframework.boot:spring-boot-starter-mail')

    // Web Crawling
    implementation('org.jsoup:jsoup:1.15.3')
    implementation('org.seleniumhq.selenium:selenium-java:4.0.0')

    // Testing
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('org.springframework.security:spring-security-test')
    testImplementation('com.h2database:h2')
}

tasks.named('test') {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

// QueryDSL
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}
